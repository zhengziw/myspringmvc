package com.mvc.context;import com.mvc.annotation.AutoWired;import com.mvc.annotation.Controller;import com.mvc.annotation.RequestMapping;import com.mvc.annotation.Service;import com.mvc.xml.XmlPaser;import java.io.File;import java.lang.reflect.Field;import java.lang.reflect.Method;import java.net.URL;import java.util.ArrayList;import java.util.List;import java.util.Map;import java.util.concurrent.ConcurrentHashMap;public class WebApplicationContext {    String contextConfigLocation;    public List<String> classNameList = new ArrayList<String>();    public Map<String, Object> iocMap = new ConcurrentHashMap<>();    public Map<String, Object> handlerMap = new ConcurrentHashMap<>();    public WebApplicationContext(String contextConfigLocation) {        this.contextConfigLocation = contextConfigLocation;    }    //解析springmvc.xml    public void refresh() {        //com.mvc.controller,com.mvc.service        String basePackage = XmlPaser.getbasePackage(contextConfigLocation.split(":")[1]);        String[] pack = basePackage.split(",");        for (int i = 0; i < pack.length; i++) {            excuteScanPackage(pack[i]);        }        //实例化spring容器中的bean        excuteInstance();        //依赖注入        excuteAutowired();        //url映射        excuteUrlMapping();    }    //url映射    public void excuteUrlMapping() {        for (Map.Entry<String, Object> bean : iocMap.entrySet()) {            Class<?> clazz = bean.getValue().getClass();            if (clazz.isAnnotationPresent(Controller.class)) {                RequestMapping mapping1 = clazz.getAnnotation(RequestMapping.class);                String classPath = mapping1.value();                Method[] methods = clazz.getMethods();                for (Method method : methods) {                    if (method.isAnnotationPresent(RequestMapping.class)) {                        RequestMapping mapping2 = method.getAnnotation(RequestMapping.class);                        String methodPath = mapping2.value();                        String requestPath = classPath + methodPath;                        handlerMap.put(requestPath, method);                    }                }            }        }    }    //依赖注入    public void excuteAutowired() {        for (Map.Entry<String, Object> bean : iocMap.entrySet()) {            Class<?> clazz = bean.getValue().getClass();            if (clazz.isAnnotationPresent(Controller.class)) {                for (Field field : clazz.getDeclaredFields()) {                    if (field.isAnnotationPresent(AutoWired.class)) {                        AutoWired annotation = field.getAnnotation(AutoWired.class);                        String key = annotation.value();                        Object beanObject = iocMap.get(key);                        field.setAccessible(true);                        try {                            field.set(bean.getValue(), beanObject);                        } catch (IllegalAccessException e) {                            e.printStackTrace();                        }                    }                }            }        }    }    //实例化spring容器中的bean    public void excuteInstance() {        for (String className : classNameList) {            try {                Class<?> clazz = Class.forName(className);                if (clazz.isAnnotationPresent(Controller.class)) {                    String beanName = clazz.getAnnotation(RequestMapping.class).value();                    iocMap.put(beanName, clazz.newInstance());                } else if (clazz.isAnnotationPresent(Service.class)) {                    String beanName = clazz.getAnnotation(Service.class).value();                    iocMap.put(beanName, clazz.newInstance());                }            } catch (Exception e) {                e.printStackTrace();            }        }    }    //扫描包    public void excuteScanPackage(String pack) {        //pack---com.mvc.controller        URL url = this.getClass().getClassLoader().getResource( pack.replaceAll("\\.", "/"));        //url---file:/E:/idea_code/springmvc01/target/springmvc01-1.0-SNAPSHOT/WEB-INF/classes/com/mvc/controller/        String path = url.getFile();        //path---/E:/idea_code/springmvc01/target/springmvc01-1.0-SNAPSHOT/WEB-INF/classes/com/mvc/controller/        File dir = new File(path);        for (File file : dir.listFiles()) {            if (file.isDirectory()) {                excuteScanPackage(pack + "." + file.getName());            } else {                String className = pack + "." + file.getName().replaceAll(".class", "");                classNameList.add(className);            }        }    }}